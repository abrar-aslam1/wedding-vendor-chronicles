name: Test Weekly Email

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Send test email to admin only'
        required: false
        type: boolean
        default: true

jobs:
  test-email:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set up environment
        run: |
          echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> $GITHUB_ENV
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> $GITHUB_ENV
      
      - name: Create test script
        run: |
          mkdir -p scripts
          cat > scripts/test-email.mjs << 'EOF'
          import { createClient } from '@supabase/supabase-js';
          
          const supabase = createClient(
            process.env.VITE_SUPABASE_URL,
            process.env.VITE_SUPABASE_ANON_KEY
          );
          
          async function sendTestEmail() {
            console.log('🧪 Testing email system...');
            
            try {
              const testReportData = {
                type: 'weekly_report',
                data: {
                  period: {
                    start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
                    end: new Date().toISOString()
                  },
                  vendors: { total: 150, newThisWeek: 5 },
                  reviews: { total: 342, newThisWeek: 12 },
                  traffic: { pageViews: 1250, uniqueUsers: 680 },
                  performance: { averageScore: 88 },
                  topVendors: [
                    { name: 'Test Vendor 1', average_rating: 4.8, review_count: 23 },
                    { name: 'Test Vendor 2', average_rating: 4.6, review_count: 18 }
                  ]
                },
                recipients: ['abrar@amarosystems.com']
              };
              
              const { data, error } = await supabase.functions.invoke('send-admin-notification', {
                body: testReportData
              });
              
              if (error) {
                console.error('❌ Email test failed:', error);
                process.exit(1);
              } else {
                console.log('✅ Email test successful!');
                console.log('📧 Test weekly report sent to abrar@amarosystems.com');
              }
              
            } catch (error) {
              console.error('❌ Test failed:', error.message);
              process.exit(1);
            }
          }
          
          sendTestEmail();
          EOF
      
      - name: Run test
        run: node scripts/test-email.mjs
      
      - name: Summary
        if: always()
        run: |
          echo "## Test Email Summary 📧" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ ES Module syntax: Working" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Supabase connection: Working" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Notification function: Working" >> $GITHUB_STEP_SUMMARY
          echo "- 📧 Test email sent to admin" >> $GITHUB_STEP_SUMMARY